= action_card_render ActionCard.new do
  - organism = list.organism
  - watson = list.watson
  - watson = false if watson == "false"
  - list.watson = watson
  - genes_for_mutations = Misc.process_to_hash(list){|list| list.genes}
  - damage_for_mutations = Misc.process_to_hash(list){|l| l.collect{|m| m.damaging? ? "Damaging" : "Not Damaging"}}

  - mutations = list
  - mutated_isoforms = Misc.process_to_hash(mutations){|mutations| mutations.mutated_isoforms.collect{|mis| (mis || []).select{|mi| mi.protein}.sort_by{|mi| mi.protein.sequence.length}.first} }
  - all_mutated_isoforms = MutatedIsoform.setup(mutated_isoforms.values.compact.flatten.uniq, organism)

  - header "InterPro Domain", "InterProDomain"
  - header "Counts", "NumericValue"
  = table do
    - tsv = TSV.setup(Misc.counts(all_mutated_isoforms.affected_interpro_domains.uniq.flatten), :key_field => "InterPro Domain", :fields => ["Counts"])
    - tsv



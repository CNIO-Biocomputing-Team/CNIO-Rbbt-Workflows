- authorize!
- studies = user_studies[user]

= action_card_render ActionCard.new do

  %h4 Genotype overview

  %p Significance calculated by mutations-per-base-pair frequencies

  - header "Number of samples", "NumericValue"
  - header "Average mutation count", "NumericValue"
  - header "Samples with gene in list mutated", "Link"
  - header "Samples with gene in list affected", "Link"
  - header "Samples with gene in list damaged", "Link"
  - header "Significant genes", "Ensembl Gene ID", :organism => list.organism
  = table(:list_links => false, :table_id => "genotype_overview_of_#{list_id}") do
    - tsv = TSV.setup({}, :key_field => "Study", :fields => ["Number of samples", "Average mutation count", "Samples with gene in list mutated", "Samples with gene in list affected", "Samples with gene in list damaged", "Significant genes"], :type => :double)

    -# log :caching, "Caching studies genotype overview"
    -# RbbtSemaphore.fork_each_on_semaphore(studies, 30) do |study|
      - Study.setup(study)
      - mutation_count = study.all_mutations.length
      - next if mutation_count > 100_000
      - begin
        - study.knowledge_base.get_index(:sample_genes)
      - rescue
        - Log.debug("Error preprocessing #{ study }: #{$!.message}")

    - studies.each do |study|
      - mutation_count = study.all_mutations.length
      - next if mutation_count > 100_000
      - genotyped_samples = study.samples.select_by(:has_genotype?)
      - next if genotyped_samples.empty?
      - significance = NKIWorkflow.job(:significantly_mutated, study, :study => study, :threshold => 0.1).run
      - significance.identifiers = Organism.identifiers(study.organism)
      - significance = significance.change_key "Ensembl Gene ID"
      - num_samples = genotyped_samples.length

      - row = []
      - row << genotyped_samples.length
      - row << mutation_count.to_f / genotyped_samples.length

      - mutated_samples = genotyped_samples.select do |sample|
        - study.knowledge_base.subset(:sample_genes, "Sample" => [sample], "Gene" => list).length > 0

      - affected_samples = genotyped_samples.select do |sample|
        - study.knowledge_base.subset(:sample_genes, "Sample" => [sample], "Gene" => list).select{|match| match.info["Affected isoform"] == "true"}.length > 0

      - damaged_samples = genotyped_samples.select do |sample|
        - study.knowledge_base.subset(:sample_genes, "Sample" => [sample], "Gene" => list).select{|match| match.info["Damaged isoform"] == "true"}.length > 0

      - row << mutated_samples.list_link("%.3g" % ((list_length = mutated_samples.length).to_f * 100 / num_samples) + " % (#{list_length})", "Samples with #{list_id} mutated in #{ study }")
      - row << affected_samples.list_link("%.3g" % ((list_length = affected_samples.length).to_f * 100 / num_samples) + " % (#{list_length})", "Samples with #{list_id} affected in #{ study }")
      - row << damaged_samples.list_link("%.3g" % ((list_length = damaged_samples.length).to_f * 100 / num_samples) + " % (#{list_length})", "Samples with #{list_id} damaged in #{ study }")
      - row << list.select{|gene| significance.include?(gene) and significance[gene]["p.value"].first.to_f < 0.05 }

      - tsv[study] = row

    - tsv
